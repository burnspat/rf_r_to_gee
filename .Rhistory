}else{
stop('Model type not recognized, please choose "ranger" or "randomForest"')
}
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, caret = caret, tidymodels = tidymodels)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '.txt'))
data
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'randomForest' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'classification' # Choose 'classification' or 'probability' or 'regression'
caret = FALSE # Model fit using caret?
tidymodels = FALSE # Model fit using tidymodels?
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
# Get example dataset
data = mtcars %>% select(mpg, am, cyl, wt, hp)
# Fit model
if(model_type == 'ranger'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else if(response_type == 'probability'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100, probability = TRUE)
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else if(model_type == 'randomForest'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else if(response_type == 'probability'){
stop('Probability models not available for randomForest, either change model type to "ranger", or change response type')
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else{
stop('Model type not recognized, please choose "ranger" or "randomForest"')
}
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}
saveRDS(rf, paste0('data/mtcars_', model_type, '_', response_type, '.rds'))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, caret = caret, tidymodels = tidymodels)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'randomForest' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'classification' # Choose 'classification' or 'probability' or 'regression'
caret = FALSE # Model fit using caret?
tidymodels = FALSE # Model fit using tidymodels?
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
# Get example dataset
data = mtcars %>% select(mpg, am, cyl, wt, hp)
# Fit model
if(model_type == 'ranger'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else if(response_type == 'probability'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100, probability = TRUE)
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else if(model_type == 'randomForest'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else if(response_type == 'probability'){
stop('Probability models not available for randomForest, either change model type to "ranger", or change response type')
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else{
stop('Model type not recognized, please choose "ranger" or "randomForest"')
}
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}
saveRDS(rf, paste0('data/mtcars_', model_type, '_', response_type, '.rds'))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, caret = caret, tidymodels = tidymodels)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'randomForest' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'regression' # Choose 'classification' or 'probability' or 'regression'
caret = FALSE # Model fit using caret?
tidymodels = FALSE # Model fit using tidymodels?
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
# Get example dataset
data = mtcars %>% select(mpg, am, cyl, wt, hp)
# Fit model
if(model_type == 'ranger'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else if(response_type == 'probability'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100, probability = TRUE)
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else if(model_type == 'randomForest'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else if(response_type == 'probability'){
stop('Probability models not available for randomForest, either change model type to "ranger", or change response type')
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else{
stop('Model type not recognized, please choose "ranger" or "randomForest"')
}
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}
saveRDS(rf, paste0('data/mtcars_', model_type, '_', response_type, '.rds'))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, caret = caret, tidymodels = tidymodels)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'classification' # Choose 'classification' or 'probability' or 'regression'
caret = FALSE # Model fit using caret?
tidymodels = FALSE # Model fit using tidymodels?
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
# Get example dataset
data = mtcars %>% select(mpg, am, cyl, wt, hp)
# Fit model
if(model_type == 'ranger'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else if(response_type == 'probability'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100, probability = TRUE)
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else if(model_type == 'randomForest'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else if(response_type == 'probability'){
stop('Probability models not available for randomForest, either change model type to "ranger", or change response type')
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else{
stop('Model type not recognized, please choose "ranger" or "randomForest"')
}
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}
saveRDS(rf, paste0('data/mtcars_', model_type, '_', response_type, '.rds'))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, caret = caret, tidymodels = tidymodels)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'probability' # Choose 'classification' or 'probability' or 'regression'
caret = FALSE # Model fit using caret?
tidymodels = FALSE # Model fit using tidymodels?
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
# Get example dataset
data = mtcars %>% select(mpg, am, cyl, wt, hp)
# Fit model
if(model_type == 'ranger'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else if(response_type == 'probability'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100, probability = TRUE)
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else if(model_type == 'randomForest'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else if(response_type == 'probability'){
stop('Probability models not available for randomForest, either change model type to "ranger", or change response type')
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else{
stop('Model type not recognized, please choose "ranger" or "randomForest"')
}
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}
saveRDS(rf, paste0('data/mtcars_', model_type, '_', response_type, '.rds'))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, caret = caret, tidymodels = tidymodels)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'regression' # Choose 'classification' or 'probability' or 'regression'
caret = FALSE # Model fit using caret?
tidymodels = FALSE # Model fit using tidymodels?
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
# Get example dataset
data = mtcars %>% select(mpg, am, cyl, wt, hp)
# Fit model
if(model_type == 'ranger'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else if(response_type == 'probability'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100, probability = TRUE)
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else if(model_type == 'randomForest'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else if(response_type == 'probability'){
stop('Probability models not available for randomForest, either change model type to "ranger", or change response type')
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else{
stop('Model type not recognized, please choose "ranger" or "randomForest"')
}
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}
saveRDS(rf, paste0('data/mtcars_', model_type, '_', response_type, '.rds'))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, caret = caret, tidymodels = tidymodels)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '.txt'))
mtcars
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'regression' # Choose 'classification' or 'probability' or 'regression'
caret = FALSE # Model fit using caret?
tidymodels = FALSE # Model fit using tidymodels?
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
# Get example dataset
data = mtcars %>% select(mpg, am, cyl, wt, hp)
# Fit model
if(model_type == 'ranger'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else if(response_type == 'probability'){
data$am = as.factor(data$am)
response_var = 'am'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100, probability = TRUE)
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = ranger(as.formula(paste(response_var, '~.')), data = data, num.trees = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else if(model_type == 'randomForest'){
if(response_type == 'classification'){
data$am = as.factor(data$am)
response_var = 'am'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else if(response_type == 'probability'){
stop('Probability models not available for randomForest, either change model type to "ranger", or change response type')
}else if(response_type == 'regression'){
response_var = 'mpg'
rf = randomForest(as.formula(paste(response_var, '~.')), data = data, ntree = 100)
}else{
stop('Response type not recognized, choose "classification" or "probability" or "regression"')
}
}else{
stop('Model type not recognized, please choose "ranger" or "randomForest"')
}
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}
rf
