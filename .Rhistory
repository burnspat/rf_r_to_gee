# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
library(caret)
library(tidymodels)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'randomForest' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'regression' # Choose 'classification' or 'probability' or 'regression'
model_fit_package = 'caret' # Choose 'base' for models fit directly with 'randomForest' or 'ranger', choose 'caret' for models fit using 'caret', choose 'tidymodels' for models fit using tidymodels
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
# Note: if loading a model, still provide the parameters above to ensure model is processed properly
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}else(stop("Model generation method not recognized, choose 'fit' or 'load'"))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, model_fit_package)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '_', model_fit_package, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
library(caret)
library(tidymodels)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'regression' # Choose 'classification' or 'probability' or 'regression'
model_fit_package = 'base' # Choose 'base' for models fit directly with 'randomForest' or 'ranger', choose 'caret' for models fit using 'caret', choose 'tidymodels' for models fit using tidymodels
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
# Note: if loading a model, still provide the parameters above to ensure model is processed properly
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}else(stop("Model generation method not recognized, choose 'fit' or 'load'"))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, model_fit_package)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '_', model_fit_package, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
library(caret)
library(tidymodels)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'regression' # Choose 'classification' or 'probability' or 'regression'
model_fit_package = 'caret' # Choose 'base' for models fit directly with 'randomForest' or 'ranger', choose 'caret' for models fit using 'caret', choose 'tidymodels' for models fit using tidymodels
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
# Note: if loading a model, still provide the parameters above to ensure model is processed properly
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}else(stop("Model generation method not recognized, choose 'fit' or 'load'"))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, model_fit_package)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '_', model_fit_package, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
library(caret)
library(tidymodels)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'regression' # Choose 'classification' or 'probability' or 'regression'
model_fit_package = 'tidymodels' # Choose 'base' for models fit directly with 'randomForest' or 'ranger', choose 'caret' for models fit using 'caret', choose 'tidymodels' for models fit using tidymodels
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
# Note: if loading a model, still provide the parameters above to ensure model is processed properly
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}else(stop("Model generation method not recognized, choose 'fit' or 'load'"))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, model_fit_package)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '_', model_fit_package, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
library(caret)
library(tidymodels)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'classification' # Choose 'classification' or 'probability' or 'regression'
model_fit_package = 'tidymodels' # Choose 'base' for models fit directly with 'randomForest' or 'ranger', choose 'caret' for models fit using 'caret', choose 'tidymodels' for models fit using tidymodels
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
# Note: if loading a model, still provide the parameters above to ensure model is processed properly
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}else(stop("Model generation method not recognized, choose 'fit' or 'load'"))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, model_fit_package)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '_', model_fit_package, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
library(caret)
library(tidymodels)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'classification' # Choose 'classification' or 'probability' or 'regression'
model_fit_package = 'caret' # Choose 'base' for models fit directly with 'randomForest' or 'ranger', choose 'caret' for models fit using 'caret', choose 'tidymodels' for models fit using tidymodels
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
# Note: if loading a model, still provide the parameters above to ensure model is processed properly
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}else(stop("Model generation method not recognized, choose 'fit' or 'load'"))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, model_fit_package)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '_', model_fit_package, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
library(caret)
library(tidymodels)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'classification' # Choose 'classification' or 'probability' or 'regression'
model_fit_package = 'base' # Choose 'base' for models fit directly with 'randomForest' or 'ranger', choose 'caret' for models fit using 'caret', choose 'tidymodels' for models fit using tidymodels
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
# Note: if loading a model, still provide the parameters above to ensure model is processed properly
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}else(stop("Model generation method not recognized, choose 'fit' or 'load'"))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, model_fit_package)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '_', model_fit_package, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
library(caret)
library(tidymodels)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'probability' # Choose 'classification' or 'probability' or 'regression'
model_fit_package = 'base' # Choose 'base' for models fit directly with 'randomForest' or 'ranger', choose 'caret' for models fit using 'caret', choose 'tidymodels' for models fit using tidymodels
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
# Note: if loading a model, still provide the parameters above to ensure model is processed properly
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}else(stop("Model generation method not recognized, choose 'fit' or 'load'"))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, model_fit_package)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '_', model_fit_package, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
library(caret)
library(tidymodels)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'probability' # Choose 'classification' or 'probability' or 'regression'
model_fit_package = 'caret' # Choose 'base' for models fit directly with 'randomForest' or 'ranger', choose 'caret' for models fit using 'caret', choose 'tidymodels' for models fit using tidymodels
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
# Note: if loading a model, still provide the parameters above to ensure model is processed properly
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}else(stop("Model generation method not recognized, choose 'fit' or 'load'"))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
library(caret)
library(tidymodels)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'ranger' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'probability' # Choose 'classification' or 'probability' or 'regression'
model_fit_package = 'tidymodels' # Choose 'base' for models fit directly with 'randomForest' or 'ranger', choose 'caret' for models fit using 'caret', choose 'tidymodels' for models fit using tidymodels
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
# Note: if loading a model, still provide the parameters above to ensure model is processed properly
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}else(stop("Model generation method not recognized, choose 'fit' or 'load'"))
# CONVERT FOREST ====================================================================================================
# Prep model
rf = prep.mod(rf, model_type, response_type, model_fit_package)
# Convert forest
convert.forest(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '_', model_fit_package, '.txt'))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
library(caret)
library(tidymodels)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'randomForest' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'probability' # Choose 'classification' or 'probability' or 'regression'
model_fit_package = 'tidymodels' # Choose 'base' for models fit directly with 'randomForest' or 'ranger', choose 'caret' for models fit using 'caret', choose 'tidymodels' for models fit using tidymodels
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
# Note: if loading a model, still provide the parameters above to ensure model is processed properly
in_path = 'data/mtcars_ranger_regression.rds'
# FIT OR LOAD MODEL ====================================================================================================
# Use example models, or load existing model
if(model_generation_method == 'fit'){
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}else(stop("Model generation method not recognized, choose 'fit' or 'load'"))
# SCRIPT METADATA ==========================================================================================
# Description: R script to format a random forest model fit in 'ranger' or 'randomForest' for upload to Google Earth Engine
# Script Author: Kathleen Orndahl & Patrick Burns
# Script Date: 2024-08-30
# NOTES:
# This code has not been robustly tested on all use cases and may require some troubleshooting depending on the parameters used in creating the models.
# The script can correctly encode categorical variables, but note that categorical variables are not currently supported by GEE models (unless they are one hot encoded, see below).
# For use in GEE, categorical predictors can be one hot encoded. In this instance, each categorical level should be treated as a separate, numerical predictor during model building.
# SET UP ====================================================================================================
# Libraries
library(dplyr)
library(tidyr)
library(ranger)
library(randomForest)
library(caret)
library(tidymodels)
source('code/reprtree_update.R')
options(scipen=999) # Ensure numbers are not represented in scientific notation
# Parameters
model_generation_method = 'fit' # Choose 'fit' to fit an example model, choose 'load' to load existing model
model_type = 'randomForest' # Specify R package used to create model - 'randomForest' or 'ranger'
response_type = 'regression' # Choose 'classification' or 'probability' or 'regression'
model_fit_package = 'base' # Choose 'base' for models fit directly with 'randomForest' or 'ranger', choose 'caret' for models fit using 'caret', choose 'tidymodels' for models fit using tidymodels
out_mod_prefix = 'mtcars_' # Name prefix to use for output model
out_path = 'example_output/' # Where to save the formatted forest
# 'load' parameters
# Note: if loading a model, still provide the parameters above to ensure model is processed properly
in_path = 'data/mtcars_ranger_regression.rds'
# Use example models, or load existing model
if(model_generation_method == 'fit'){
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
}else if(model_generation_method == 'load'){
rf = readRDS(in_path)
}else(stop("Model generation method not recognized, choose 'fit' or 'load'"))
rf = prep.mod(rf, model_type, response_type, model_fit_package)
rf
tree = randomForest::getTree(rf, 1, TRUE)
tree
rf$ntree
convert.forest.chunk = function(rf_mod = NULL, out_file = NULL){
# Create output file
sink(file = out_file, append = TRUE)
# Get total number of trees
ntrees = rf_mod[[rf_mod$n_tree_var]]
for(i in 1:ntrees/2){
# Get tree
if(rf_mod$model_type == 'ranger'){
tree = ranger::treeInfo(rf_mod, tree = i)
tree = tree.ranger.to.randomForest(tree, rf_mod$pred_var) # Convert to 'randomForest' format
}else if(rf_mod$model_type == 'randomForest'){
tree = randomForest::getTree(rf_mod, i, TRUE)
}else{
stop('Model type not recognized, please choose "ranger" or "randomForest"')
}
# Convert to 'tree' formatting
tree_formatted = as.tree(gTree = tree,
rforest = rf_mod)
# Write tree
print(tree_formatted)
}
# Close connection
sink()
closeAllConnections()
# Read back in file and tidy
tree_file = readLines(out_file)
tree_file  = gsub(pattern = "node\\), split, n, deviance, yval", replace = "", x = tree_file) # Remove header
tree_file  = gsub(pattern = "      \\* denotes terminal node", replace = "", x = tree_file) # Remove header
tree_file  = gsub(pattern = "\\.(?![0-9])", replace = "", x = tree_file, perl=TRUE) # Periods cannot be read by GEE, remove periods if not followed by a number
if(rf_mod$response_type == 'classification'){
tree_file  = gsub(pattern = ", \\(yprob\\)", replace = "", x = tree_file) # Remove header
}
tree_file = tree_file[which(tree_file!="")] # Remove blank lines
# Overwrite tidy trees
writeLines(tree_file, out_file)
closeAllConnections()
}
convert.forest.chunk(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '_', model_fit_package, '_TEMP.txt'))
rf
rf = fit.test.mod(model_type, model_fit_package, response_type, seed = 12)
rf = prep.mod(rf, model_type, response_type, model_fit_package)
convert.forest.chunk(rf, paste0(out_path, out_mod_prefix, model_type, '_', response_type, '_', model_fit_package, '_TEMP.txt'))
rf_mod = rf
